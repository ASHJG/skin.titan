<?xml version="1.0" encoding="utf-8"?>
<includes>
	
	<!--Overlay-->
    <include name="DialogOverlay">
        <!--Dialog Overlay default-->
        <control type="image">
			<visible>[Skin.HasSetting(BackgroundOverlayMediaViewOnly) + !Window.IsActive(home)] | [Skin.HasSetting(BackgroundOverlayHomeOnly) + SubString(Window.Property(xmlfile),Home,left)] | [!Skin.HasSetting(BackgroundOverlayMediaViewOnly) + !Skin.HasSetting(BackgroundOverlayHomeOnly)]</visible>
			<include>DimensionsFullscreen</include>
			<texture>$VAR[ColorOverlayTexture]</texture>
			<include condition="Skin.String(BackgroundOverlayColor) + !Skin.String(BackgroundOverlayColor,None)">bgOverlayDiffuse</include>
			<visible>!Control.IsVisible(507)</visible>
            <visible>![Skin.String(widgetstyle, single box) + Control.HasFocus(510)]</visible>
		</control>
    </include>
	
	<variable name="ColorOverlayTexture">
		<value condition="!Skin.String(BackgroundOverlayTexture, Custom)">special://skin/extras/bgoverlays/$INFO[Skin.String(BackgroundOverlayTexture)].png</value>
		<value condition="Skin.String(BackgroundOverlayTexture, Custom)">$INFO[Skin.String(CustomBackgroundOverlayTexture)]</value>
   </variable>
   
    
    <include name="bgColorDiffuse">
        <colordiffuse>$INFO[Skin.String(BackgroundDiffuseColor)]</colordiffuse>
    </include>
    
    <include name="bgOverlayDiffuse">
        <colordiffuse>$INFO[Skin.String(BackgroundOverlayColor)]</colordiffuse>
    </include>
	
    
    <include name="DialogOverlayExtra">
		<!-- dim screen overlay used in certain dialogs -->
		<control type="image">
			<include>DimensionsFullscreen</include>
			<texture>special://skin/extras/bgoverlays/Default.png</texture>
			<colordiffuse>aawhite</colordiffuse>
            <visible>!Skin.String(BackgroundDiffuseColor.base)</visible>
		</control>
		<control type="image">
			<include>DimensionsFullscreen</include>
			<texture>special://skin/extras/bgoverlays/Default.png</texture>
			<colordiffuse>aa0f0f0f</colordiffuse>
            <visible>!Skin.String(BackgroundDiffuseColor.base)</visible>
		</control>
        <control type="image" description="panel behind bg">
            <include>DimensionsFullscreen</include>
            <texture>colors/color_white.png</texture>
            <colordiffuse>$INFO[Skin.String(BackgroundDiffuseColor.base)]</colordiffuse>
            <animation effect="fade" start="100" end="95" time="150" condition="true">Conditional</animation>
            <visible>Skin.String(BackgroundDiffuseColor.base)</visible>
        </control>
    </include>
	
	<include name="fanartSpeed5">
		<timeperimage>5000</timeperimage>
	</include>
	<include name="fanartSpeed6">
		<timeperimage>6000</timeperimage>
	</include>
	<include name="fanartSpeed8">
		<timeperimage>8000</timeperimage>
	</include>
	<include name="fanartSpeed10">
		<timeperimage>10000</timeperimage>
	</include>
	<include name="fanartSpeed15">
		<timeperimage>15000</timeperimage>
	</include>
	<include name="fanartSpeed20">
		<timeperimage>20000</timeperimage>
	</include>
	<include name="fanartSpeed30">
		<timeperimage>30000</timeperimage>
	</include>
	<include name="fanartSpeed60">
		<timeperimage>60000</timeperimage>
	</include>
	
	<include name="extraFanartBackground">
		<!-- extra fanart background -->
        
        <!-- background panel -->
        <control type="image" description="panel behind bg">
            <include>DimensionsFullscreen</include>
            <texture>colors/color_white.png</texture>
            <colordiffuse>$INFO[Skin.String(BackgroundDiffuseColor.base)]</colordiffuse>
            <visible>Skin.String(BackgroundDiffuseColor) + !Skin.String(BackgroundDiffuseColor, None)</visible>
            <visible>!IsEmpty(Control.GetLabel(99005)) + Control.IsVisible(99005)</visible>
        </control>
        
        <control type="multiimage" id="99005">
            <include>DimensionsFullscreen</include>
            <imagepath background="true">$VAR[extraFanartBackground]</imagepath>
            <aspectratio>scale</aspectratio>
            <include condition="skin.string(extrafanartdelay, 6)">fanartSpeed6</include>
			<include condition="skin.string(extrafanartdelay, 8)">fanartSpeed8</include>
			<include condition="skin.string(extrafanartdelay, 10)">fanartSpeed10</include>
			<include condition="skin.string(extrafanartdelay, 15)">fanartSpeed15</include>
			<include condition="skin.string(extrafanartdelay, 20)">fanartSpeed20</include>
            <animation effect="fade" start="100" end="20" time="150" condition="Skin.String(BackgroundDiffuseColor) + !Skin.String(BackgroundDiffuseColor, None)">Conditional</animation>
            <fadetime>350</fadetime>
            <randomize>true</randomize>
			<animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
			<animation effect="slide" start="-10,-10" end="10,10" time="5000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
			<!-- disabled fanart per view -->
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(50) + Skin.HasSetting(View50_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(51) + Skin.HasSetting(View51_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(52) + Skin.HasSetting(View52_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(53) + Skin.HasSetting(View53_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(54) + Skin.HasSetting(View54_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(55) + Skin.HasSetting(View55_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(56) + Skin.HasSetting(View56_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(57) + Skin.HasSetting(View57_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(58) + Skin.HasSetting(View58_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(59) + Skin.HasSetting(View59_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(500) + Skin.HasSetting(View500_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(502) + Skin.HasSetting(View502_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(505) + Skin.HasSetting(View505_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(506) + Skin.HasSetting(View506_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(507) + Skin.HasSetting(View507_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(508) + Skin.HasSetting(View508_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(509) + Skin.HasSetting(View509_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(510) + Skin.HasSetting(View510_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(511) + Skin.HasSetting(View511_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(512) + Skin.HasSetting(View512_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(513) + Skin.HasSetting(View513_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(514) + Skin.HasSetting(View514_DisableFanArt)]</visible>
			<visible>![substring(Window.Property(xmlfile),My,left) + Control.IsVisible(515) + Skin.HasSetting(View515_DisableFanArt)]</visible>
        </control>
	</include>

    
	<!--Global Background -->
    <include name="GlobalBackground">
        
        <!-- background panel -->
        <control type="image" description="panel behind bg">
            <include>DimensionsFullscreen</include>
            <texture>colors/color_white.png</texture>
            <colordiffuse>$INFO[Skin.String(BackgroundDiffuseColor.base)]</colordiffuse>
            <visible>Skin.String(BackgroundDiffuseColor) + !Skin.String(BackgroundDiffuseColor, None)</visible>
        </control>
			
		<!-- multi image background -->
        <control type="multiimage" id="99004">
            <include>DimensionsFullscreen</include>
            <imagepath background="true" fallback="special://skin/extras/backgrounds/global_blue.jpg">$VAR[backgroundVar]</imagepath>
            <aspectratio>scale</aspectratio>
			<include condition="skin.string(SkinHelper.RandomFanartDelay, 5)">fanartSpeed5</include>
            <include condition="skin.string(SkinHelper.RandomFanartDelay, 10)">fanartSpeed10</include>
			<include condition="skin.string(SkinHelper.RandomFanartDelay, 15)">fanartSpeed15</include>
			<include condition="skin.string(SkinHelper.RandomFanartDelay, 20)">fanartSpeed20</include>
			<include condition="skin.string(SkinHelper.RandomFanartDelay, 30)">fanartSpeed30</include>
			<include condition="skin.string(SkinHelper.RandomFanartDelay, 60)">fanartSpeed60</include>
            <animation effect="fade" start="100" end="8" time="150" condition="Skin.String(BackgroundDiffuseColor) + !Skin.String(BackgroundDiffuseColor, None)">Conditional</animation>
            <fadetime>350</fadetime>
            <randomize>true</randomize>
			<animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
			<animation effect="slide" start="-10,-10" end="10,10" time="5000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
        </control>
		
		<include condition="[Window.IsActive(videolibrary) | Window.IsActive(musiclibrary) | Window.IsActive(movieinformation)] + Skin.HasSetting(ShowFanartBackground) + Skin.HasSetting(SkinHelper.EnableExtraFanart)">extraFanartBackground</include>
		
		<include>DialogOverlay</include>
    </include>
	
	<variable name="globalBackground">
		<!-- global background custom-->
		<value condition="!Skin.String(CustomBackgroundSetting, default) + !Skin.String(CustomBackgroundSetting, blue) + !Skin.String(CustomBackgroundSetting, weather) + !Skin.String(CustomBackgroundSetting, fanart) + Skin.String(CustomBackgroundSetting)">$INFO[Skin.String(CustomBackgroundSetting)]</value>
		<!-- global weather background -->
		<value condition="Skin.String(CustomBackgroundSetting, weather)">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Current.FanartCode)]</value>
		<!-- global fanart background -->
		<value condition="Skin.String(CustomBackgroundSetting, fanart) + !IsEmpty(Window(Home).Property(SkinHelper.GlobalFanartBackground))">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground)]</value>
		<!-- default backgrounds -->
		<value condition="skin.hastheme(classic)">special://skin/extras/backgrounds/global.jpg</value>
		<value>special://skin/extras/backgrounds/global_blue.jpg</value>
	</variable>

	<variable name="backgroundVar">
    
        <value condition="[Window.IsActive(LoginScreen.xml) | Window.IsActive(StartUp.xml)] + Skin.String(LoginBackground)">$INFO[Skin.String(LoginBackground)]</value>
        
        <!-- conditional background override -->
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.ConditionalBackground))">$INFO[Window(home).Property(SkinHelper.ConditionalBackground)]</value>
        
        <!-- extendedinfo -->
        <value condition="Window.IsActive(script-ExtendedInfo Script-DialogVideoInfo.xml) + !IsEmpty(Window.Property(movie.FanArt))">$INFO[Window.Property(movie.FanArt)]</value>
        <value condition="Window.IsActive(script-ExtendedInfo Script-DialogInfo.xml) + !IsEmpty(Window.Property(actor.thumb))">$INFO[Window.Property(actor.thumb)]</value>
        <value condition="Window.IsActive(script-ExtendedInfo Script-VideoList.xml) + !IsEmpty(Container(500).ListItem.Property(Fanart_small))">$INFO[Container(500).ListItem.Property(Fanart_small)]</value>
        
		<!--nextaired script backgrounds -->
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(200) + !IsEmpty(Container(200).ListItem.Property(Fanart))">$INFO[Container(200).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(201) + !IsEmpty(Container(201).ListItem.Property(Fanart))">$INFO[Container(201).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(202) + !IsEmpty(Container(202).ListItem.Property(Fanart))">$INFO[Container(202).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(203) + !IsEmpty(Container(203).ListItem.Property(Fanart))">$INFO[Container(203).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(204) + !IsEmpty(Container(204).ListItem.Property(Fanart))">$INFO[Container(204).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(205) + !IsEmpty(Container(205).ListItem.Property(Fanart))">$INFO[Container(205).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(206) + !IsEmpty(Container(206).ListItem.Property(Fanart))">$INFO[Container(206).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(207) + !IsEmpty(Container(207).ListItem.Property(Fanart))">$INFO[Container(207).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(208) + !IsEmpty(Container(208).ListItem.Property(Fanart))">$INFO[Container(208).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(209) + !IsEmpty(Container(209).ListItem.Property(Fanart))">$INFO[Container(209).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(210) + !IsEmpty(Container(210).ListItem.Property(Fanart))">$INFO[Container(210).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(211) + !IsEmpty(Container(211).ListItem.Property(Fanart))">$INFO[Container(211).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(212) + !IsEmpty(Container(212).ListItem.Property(Fanart))">$INFO[Container(212).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(213) + !IsEmpty(Container(213).ListItem.Property(Fanart))">$INFO[Container(213).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(214) + !IsEmpty(Container(214).ListItem.Property(Fanart))">$INFO[Container(214).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(215) + !IsEmpty(Container(215).ListItem.Property(Fanart))">$INFO[Container(215).ListItem.Property(Fanart)]</value>
		
		<!-- custom search -->
		<value condition="Window.IsActive(script-skin_helper_service-CustomSearch.xml) + Control.HasFocus(3110) + !IsEmpty(Container(3110).ListItem.Art(fanart))">$INFO[Container(3110).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(script-skin_helper_service-CustomSearch.xml) + Control.HasFocus(3111) + !IsEmpty(Container(3111).ListItem.Art(fanart))">$INFO[Container(3111).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(script-skin_helper_service-CustomSearch.xml) + Control.HasFocus(3112) + !IsEmpty(Container(3112).ListItem.Art(tvshow.fanart))">$INFO[Container(3112).ListItem.Art(tvshow.fanart)]</value>
		
		<!-- HOME widgets -->
        <value condition="Window.IsActive(Home) + Skin.String(HomeLayout, netflix)">$INFO[Container(510).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(Home) + [Control.HasFocus(510) | Skin.String(widgetstyle, single box)] + Skin.HasSetting(ShowFanartBackground) + !IsEmpty(Container(510).ListItem.Art(fanart))">$INFO[Container(510).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(Home) + [Control.HasFocus(510) | Skin.String(widgetstyle, single box)] + Skin.HasSetting(ShowFanartBackground) + !IsEmpty(Container(510).ListItem.Art(tvshow.fanart))">$INFO[Container(510).ListItem.Art(tvshow.fanart)]</value>
		<value condition="Window.IsActive(Home) + [Control.HasFocus(510) | Skin.String(widgetstyle, single box)] + Skin.HasSetting(ShowFanartBackground) + !IsEmpty(Container(510).ListItem.Property(fanart))">$INFO[Container(510).ListItem.Property(fanart)]</value>
		<value condition="Window.IsActive(Home) + Control.HasFocus(1508) + Skin.HasSetting(ShowFanartBackground) + !IsEmpty(Container(1508).ListItem.Art(fanart))">$INFO[Container(1508).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(Home) + Control.HasFocus(1508) + Skin.HasSetting(ShowFanartBackground) + !IsEmpty(Container(1508).ListItem.Art(tvshow.fanart))">$INFO[Container(1508).ListItem.Art(tvshow.fanart)]</value>
		<value condition="Window.IsActive(Home) + Control.HasFocus(1508) + Skin.HasSetting(ShowFanartBackground) + !IsEmpty(Container(1508).ListItem.Property(fanart))">$INFO[Container(1508).ListItem.Property(fanart)]</value>
		
        
		<!-- disabled fanart per view -->
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(50) + Skin.HasSetting(View50_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(51) + Skin.HasSetting(View51_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(52) + Skin.HasSetting(View52_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(53) + Skin.HasSetting(View53_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(54) + Skin.HasSetting(View54_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(55) + Skin.HasSetting(View55_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(56) + Skin.HasSetting(View56_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(57) + Skin.HasSetting(View57_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(58) + Skin.HasSetting(View58_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(59) + Skin.HasSetting(View59_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(500) + Skin.HasSetting(View500_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(502) + Skin.HasSetting(View502_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(505) + Skin.HasSetting(View505_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(506) + Skin.HasSetting(View506_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(507) + Skin.HasSetting(View507_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(508) + Skin.HasSetting(View508_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(509) + Skin.HasSetting(View509_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(510) + Skin.HasSetting(View510_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(511) + Skin.HasSetting(View511_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(512) + Skin.HasSetting(View512_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(513) + Skin.HasSetting(View513_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(514) + Skin.HasSetting(View514_DisableFanArt)">$VAR[globalBackground]</value>
		<value condition="substring(Window.Property(xmlfile),My,left) + Control.IsVisible(515) + Skin.HasSetting(View515_DisableFanArt)">$VAR[globalBackground]</value>

		<!-- normal fanart backgrounds -->
		<value condition="Skin.HasSetting(ShowFanartBackground) + Window.IsActive(MyWeather.xml)">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Current.FanartCode)]</value>
		<value condition="Skin.HasSetting(ShowFanartBackground) + !IsEmpty(ListItem.PicturePath)">$INFO[ListItem.PicturePath]</value>
		<value condition="Skin.HasSetting(ShowFanartBackground) + !IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="Skin.HasSetting(ShowFanartBackground) + !IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
		<value condition="Skin.HasSetting(ShowFanartBackground) + !IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value condition="Skin.HasSetting(ShowFanartBackground) + !IsEmpty(Container.Art(albumartist.fanart))">$INFO[Container.Art(albumartist.fanart)]</value>
		<value condition="Skin.HasSetting(ShowFanartBackground) + substring(Window.Property(xmlfile),MyPVR,left) + !IsEmpty(Window(home).Property(SkinHelper.PVR.FanArt))">$INFO[Window(home).Property(SkinHelper.PVR.FanArt)]</value>
		
        
		<!-- section backgrounds when skinshortcuts dialog active -->
		<value condition="Skin.HasSetting(UseSectionBackground) + !IsEmpty(Container(211).ListItem.Property(Background))">$INFO[Container(211).ListItem.Property(Background)]</value>
		
		<!-- section backgrounds when home active -->
		<value condition="Skin.HasSetting(UseSectionBackground) + !IsEmpty(Container(300).ListItem.Property(Background))">$INFO[Container(300).ListItem.Property(Background)]</value>
		
		<!-- section background when home not active -->
		<value condition="Skin.HasSetting(UseSectionBackground) + !IsEmpty(Window(home).Property(SkinHelper.SectionBackground))">$INFO[Window(home).Property(SkinHelper.SectionBackground)]</value>
		
		<!-- global background custom-->
		<value condition="!Skin.String(CustomBackgroundSetting, default) + !Skin.String(CustomBackgroundSetting, blue) + !Skin.String(CustomBackgroundSetting, weather) + !Skin.String(CustomBackgroundSetting, fanart) + Skin.String(CustomBackgroundSetting)">$INFO[Skin.String(CustomBackgroundSetting)]</value>
		<!-- global weather background -->
		<value condition="Skin.String(CustomBackgroundSetting, weather)">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Current.FanartCode)]</value>
		<!-- global fanart background -->
		<value condition="Skin.String(CustomBackgroundSetting, fanart) + !IsEmpty(Window(Home).Property(SkinHelper.GlobalFanartBackground))">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground)]</value>
		<!-- default backgrounds -->
        
		<value condition="skin.hastheme(classic)">special://skin/extras/backgrounds/global.jpg</value>
		<value>special://skin/extras/backgrounds/global_blue.jpg</value>
   </variable>
   
   <variable name="extraFanartBackground">
		<!-- extra fanart backgrounds -->
		<value condition="[Window.IsActive(videolibrary) | Window.IsActive(movieinformation)]  + Skin.HasSetting(ShowFanartBackground) + substring(ListItem.Path,plugin://plugin.video.emby) + Skin.HasSetting(SkinHelper.EnableExtraFanart)">$INFO[ListItem.Path]extrafanart/</value>
		<value condition="[Window.IsActive(videolibrary) | Window.IsActive(musiclibrary) | Window.IsActive(movieinformation)] + Skin.HasSetting(SkinHelper.EnableExtraFanart) + !IsEmpty(Window(Home).Property(SkinHelper.ExtraFanArtPath))">$INFO[Window(Home).Property(SkinHelper.ExtraFanArtPath)]</value>
		<value>colors/color_transparent.png</value>
   </variable>
   

	<include name="PVRpanelBackground">

		<!-- Background Panel-->
		<control type="image">
			<posx>50</posx>
			<posy>320</posy>
			<width>1820</width>
			<height>640</height>
			<texture border="15">diffuse/bgpanel.png</texture>
			<colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
		</control>
		
		<control type="image">
			<posx>982</posx>
			<posy>320</posy>
			<width>885</width>
			<height>640</height>
			<texture border="15">diffuse/bgpanel.png</texture>
			<colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
		</control>
	</include>
	
	
	
</includes>