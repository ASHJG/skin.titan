<?xml version="1.0" encoding="utf-8"?>
<includes>

	<variable name="changeWidgetLabel">
		<value condition="StringCompare(Window(home).Property(activewidget),1)">$INFO[Container(300).ListItem.Property(widgetName.1)]</value>
		<value condition="StringCompare(Window(home).Property(activewidget),2)">$INFO[Container(300).ListItem.Property(widgetName.2)]</value>
		<value condition="StringCompare(Window(home).Property(activewidget),3)">$INFO[Container(300).ListItem.Property(widgetName.3)]</value>
		<value condition="StringCompare(Window(home).Property(activewidget),4)">$INFO[Container(300).ListItem.Property(widgetName.4)]</value>
		<value>$INFO[Container(300).ListItem.Property(widgetName)]</value>
	</variable>

	<include name="HomeMenuWidget">
		<!-- infopanel -->
		<control type="group">
			
			<animation type="Conditional" condition="!Skin.String(GadgetRows, simplehor) + [ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)] + !Skin.HasSetting(AutoShowWidgets)">
                <effect type="slide" start="0,0" end="0,1000" time="400" tween="cubic" easing="inout" delay="0"/>
            </animation>
			<animation type="Conditional" condition="!Skin.String(GadgetRows, simplehor) + [ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)] + Skin.HasSetting(AutoShowWidgets)">
                <effect type="slide" start="0,0" end="0,420" time="400" tween="cubic" easing="inout" delay="0"/>
            </animation>
			<animation type="Conditional" condition="!Skin.String(GadgetRows, simplehor) + Control.IsVisible(77777) + Skin.HasSetting(AutoShowWidgets)">
                 <effect type="slide" start="0,0" end="0,580" time="400" tween="cubic" easing="inout" delay="0"/>
			</animation>
			
			<visible allowhiddenfocus="true">!IsEmpty(Container(300).ListItem.Property(widget))</visible>

				<animation time="400" effect="fade">Visible</animation>
				<animation time="200" effect="fade">Hidden</animation>
				
			<height>560</height>
			<posy>-1100</posy>
			
			<control type="image">
				<posx>0</posx>
				<posy>-120</posy>
				<width>100%</width>
				<texture border="15">diffuse/bgpanel.png</texture>
				<colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
				<aspectratio>stretch</aspectratio>
				<height>1032</height>
				<visible>!Skin.HasSetting(HideWidgetPanelBackground)</visible>
				<visible>[ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)]</visible>
				<include>animation_fade_visible_hidden_delayed</include>
				<animation type="Conditional" condition="Skin.String(widgetstyle, poster)">
                 <effect type="slide" start="0,0" end="0,120" time="0" delay="0"/>
			</animation>
            </control>

		<control type="label">
            <posx>405</posx>
            <posy>100</posy>
            <width>1465</width>
            <height>100</height>
            <font>Bold45</font>
            <align>left</align>
            <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
            <label>$VAR[HomeMenuWidgetInfoLabel]</label>
			<visible>[ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)]</visible>
			<animation effect="slide" end="-355,0" time="0" condition="StringCompare(Container(300).ListItem.Property(widget),weather)">Conditional</animation>
        </control>
		<control type="fadelabel">
            <posx>0</posx>
            <bottom>-610</bottom>
            <width>100%</width>
            <height>100</height>
            <font>Bold45</font>
            <align>center</align>
            <textcolor>lightgrey</textcolor>
			<shadowcolor>black</shadowcolor>
            <label>$VAR[HomeMenuWidgetInfoLabel2]</label>
			<scroll>true</scroll>
			<scrollout>true</scrollout>
			<pauseatend>0</pauseatend>
			<visible>IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(Container(510).ListItem.Art(tvshow.clearlogo)) + IsEmpty(Container(510).ListItem.Art(clearlogo)) + !Skin.HasSetting(EnableTouchSupport)</visible>
			<visible>ControlGroup(77777).HasFocus</visible>
			<animation time="400" effect="fade" delay="1000">Visible</animation>
			<animation time="0" effect="fade" delay="0">Hidden</animation>
        </control>
		
		
		<control type="grouplist">
			<width>1500</width>
			<posx>405</posx>
			<posy>195</posy>
			<height>367</height>
			<orientation>vertical</orientation>
			<visible>[ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)]</visible>
			<control type="textbox">
				<width>1455</width>
				<height max="294">auto</height>
				<label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
				<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
				<align>justify</align>
				<font>Light28</font>
				<animation effect="slide" end="-355,0" time="0" condition="StringCompare(Container(300).ListItem.Property(widget),weather)">Conditional</animation>
			</control>
			<control type="label">
				<height>25</height>
				<label></label>
			</control>
			<control type="group">
				<height>60</height>
				<posx>405</posx>
				<posy>195</posy>
				<include>mediaflags</include>
				<visible>!StringCompare(Container(300).ListItem.Property(widgetTarget),music)</visible>
			</control>
		</control>
		
		
		<control type="image">
			<left>30</left>
			<posy>105</posy>
			<width>340</width>
			<height>485</height>
			<aspectratio align="left" aligny="top">keep</aspectratio>
			<bordertexture border="20" colordiffuse="black">diffuse/poster_shadow.png</bordertexture>
			<bordersize>20</bordersize>
			<texture background="true" diffuse="diffuse/poster.png" fallback="colors/color_keyboard.png">$VAR[HomeMenuWidgetInfoPoster]</texture>
			<visible>!StringCompare(Container(300).ListItem.Property(widgetTarget),music) + !StringCompare(Container(300).ListItem.Property(widget),weather)</visible>
			<visible>[ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)]</visible>
		</control>
		<control type="image">
			<left>30</left>
			<posy>125</posy>
			<width>330</width>
			<height>465</height>
			<aspectratio align="left" aligny="top">keep</aspectratio>
			<texture background="true" fallback="DefaultMusicSongs.png" diffuse="diffuse/music_cover.png">$VAR[HomeMenuWidgetInfoPoster]</texture>
			<visible>StringCompare(Container(300).ListItem.Property(widgetTarget),music)</visible>
			<visible>[ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)]</visible>
		</control>
		<control type="image">
			<right>30</right>
			<posy>125</posy>
			<width>330</width>
			<height>465</height>
			<texture fallback="DefaultAddonWeather.png">$VAR[HomeMenuWidgetInfoPoster]</texture>
			<aspectratio align="left" aligny="top">keep</aspectratio>
			<visible>StringCompare(Container(300).ListItem.Property(widget),weather)</visible>
			<visible>[ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)]</visible>
		</control>
		<!-- Widget-->
		<control type="group" id="77777">
			<height>440</height>
			<posx>15</posx>
			<posy>600</posy>
			<defaultcontrol always="true">510</defaultcontrol>
			<animation effect="slide" end="0,25" time="0" condition="skin.hastheme(classic)">Conditional</animation>

			<!--widget Arrow DOWN-->
			<control type="group">
				<!-- show arrow down button if submenu available or widget at 2 rows of home tiles -->
				<visible>ControlGroup(77777).HasFocus + !skin.hastheme(classic) + !Skin.String(widgetstyle, poster)</visible>
				<visible>!Skin.HasSetting(HideWidgetPanelBackground)</visible>
				<animation effect="fade" start="0" end="100" delay="1600" time="1600" pulse="true">Visible</animation>
				<control type="button">
					<!--widget Arrow DOWN-->
					<posx>872</posx>
					<posy>311</posy>
					<width>149</width>
					<height>30</height>
					<onclick>ClearProperty(ShowWidget, Home)</onclick>
					<texturefocus>-</texturefocus>
					<texturenofocus>-</texturenofocus>
				</control>
				<control type="image">
					<posx>872</posx>
					<posy>311</posy>
					<width>149</width>
					<height>30</height>
					<texture colordiffuse="$INFO[Skin.String(ViewDetailsPanelColor)]">colors/color_white.png</texture>
				</control>
				<control type="image">
					<posx>872</posx>
					<posy>311</posy>
					<width>149</width>
					<height>34</height>
					<texture>info/arrowright.png</texture>
					<colordiffuse>white</colordiffuse>
					<aspectratio>keep</aspectratio>
					<animation effect="rotate" end="-90" center="auto" time="0" loop="false" condition="true">Conditional</animation>
				</control>
			</control>
			
			<control type="button">
				<!--widget Arrow DOWN classic-->
				<animation effect="fade" start="0" end="100" delay="1600" time="1600" pulse="true">Visible</animation>
				<posx>872</posx>
				<posy>301</posy>
				<width>149</width>
				<height>30</height>
				<onclick>ClearProperty(ShowWidget, Home)</onclick>
				<texturefocus colordiffuse="white">home/basichome_down.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]">home/basichome_down.png</texturenofocus>
				<visible>ControlGroup(77777).HasFocus + skin.hastheme(classic)</visible>
				<visible>!Skin.HasSetting(HideWidgetPanelBackground) + !Skin.String(widgetstyle, poster)</visible>
			</control>

			
			<!-- clearlogo -->
			<control type="image">
				<posx>755</posx>
				<posy>400</posy>
				<width>400</width>
				<height>160</height>
				<aspectratio align="center" aligny="bottom">keep</aspectratio>
				<texture background="true">$VAR[HomeMenuWidgetInfoclearlogo]</texture>
				<visible>ControlGroup(77777).HasFocus + !Skin.HasSetting(EnableTouchSupport)</visible>
				<animation time="400" effect="fade" delay="1000">Visible</animation>
				<animation time="0" effect="fade" delay="0">Hidden</animation>
				<animation effect="slide" end="0,-25" time="0" condition="skin.hastheme(classic)">Conditional</animation>
				<visible>!Skin.String(widgetstyle, poster)</visible>
			</control>
			<control type="image">
				<posx>755</posx>
				<posy>450</posy>
				<width>400</width>
				<height>110</height>
				<aspectratio align="center" aligny="bottom">keep</aspectratio>
				<texture background="true">$VAR[HomeMenuWidgetInfoclearlogo]</texture>
				<visible>ControlGroup(77777).HasFocus + !Skin.HasSetting(EnableTouchSupport)</visible>
				<animation time="400" effect="fade" delay="1000">Visible</animation>
				<animation time="0" effect="fade" delay="0">Hidden</animation>
				<animation effect="slide" end="0,-25" time="0" condition="skin.hastheme(classic)">Conditional</animation>
				<visible>Skin.String(widgetstyle, poster)</visible>
			</control>
			
			<!--change widget button -->
			<control type="group">
				<right>60</right>
				<width>600</width>
				<height>60</height>
				<include>animation_fade_visible_hidden_delayed</include>
				<control type="image">
					<colordiffuse>$INFO[Skin.String(ButtonTextColor)]</colordiffuse>
					<texture flipy="true">dialogs/default/separator.png</texture>
					<visible>Control.IsVisible(511)</visible>
				</control>
				<control type="button" id="511">
					<right>0</right>
					<width>600</width>
					<align>right</align>
					<font>Reg30</font>
					<onup>300</onup>
					<ondown>510</ondown>
					<textoffsetx>90</textoffsetx>
					<texturenofocus>dialogs/default/separator.png</texturenofocus>
					<label>$VAR[changeWidgetLabel]</label>
					<onclick condition="!IsEmpty(Container(300).ListItem.Property(widget.1)) + [StringCompare(Window(home).Property(activewidget),0) | IsEmpty(Window(home).Property(activewidget))]">SetProperty(activewidget,1)</onclick>
					<onclick condition="!IsEmpty(Container(300).ListItem.Property(widget.1)) + StringCompare(Window(home).Property(activewidget),1)">SetProperty(activewidget,0)</onclick>
					<onclick condition="IsEmpty(Container(300).ListItem.Property(widget.1))">RunScript(script.skinshortcuts,type=manage&amp;group=mainmenu)</onclick>
					<visible allowhiddenfocus="true">[ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)] + !IsEmpty(Control.GetLabel(511))</visible>
				</control>
				<control type="image">
					<right>5</right>
					<posy>0</posy>
					<width>40</width>
					<height>60</height>
					<colordiffuse>$INFO[Skin.String(ButtonTextColor)]</colordiffuse>
					<texture>common/spinctrl/arrow-up-nf.png</texture>
					<visible>Control.IsVisible(511)</visible>
				</control>
				<control type="image">
					<right>45</right>
					<posy>0</posy>
					<width>40</width>
					<height>60</height>
					<texture>common/spinctrl/arrow-down-nf.png</texture>
					<visible>Control.IsVisible(511) + !Control.HasFocus(511)</visible>
				</control>
				<control type="image">
					<right>45</right>
					<posy>0</posy>
					<width>40</width>
					<height>60</height>
					<texture>common/spinctrl/arrow-down-fo.png</texture>
					<visible>Control.IsVisible(511) + Control.HasFocus(511)</visible>
				</control>
			</control>

			<include>skinshortcuts-template-widget</include>
			<include>skinshortcuts-template-widget.1</include>

		</control>
	</control>
</include>

	
	
	<include name="SystemInfoWidget">
		<!--systeminfo widgets -->
		<item>
			<label>$LOCALIZE[155]: </label>
			<label2>$INFO[System.UsedSpacePercent]</label2>
			<thumb>special://skin/extras/defaulticonswide/disk.png</thumb>
			<property name="episodethumb">special://skin/extras/defaulticonswide/disk2.png</property>
			<property name="poster">special://skin/extras/defaulticonswide/disk.png</property>
			<property name="special">systeminfo</property>
			<property name="fanart">special://skin/extras/backgrounds/settings.jpg</property>
			<property name="plot">[CR]$INFO[System.TotalSpace] • $INFO[System.UsedSpace][CR]$INFO[System.HddTemperature]</property>
			<onclick>ActivateWindow(systeminfo)</onclick>
		</item>
		<item>
			<label>$LOCALIZE[13271]</label>
			<label2>$INFO[System.CpuUsage] • $INFO[System.CpuFrequency]</label2>
			<thumb>special://skin/extras/defaulticonswide/cpu.png</thumb>
			<property name="poster">special://skin/extras/defaulticonswide/cpu.png</property>
			<property name="episodethumb">special://skin/extras/defaulticonswide/cpu2.png</property>
			<property name="special">systeminfo</property>
			<property name="fanart">special://skin/extras/backgrounds/cpu.jpg</property>
			<property name="plot">[CR]$LOCALIZE[401]: $INFO[System.CPUTemperature] • $LOCALIZE[13300]: $INFO[System.FanSpeed][CR]$LOCALIZE[12390]: $INFO[System.Uptime]</property>
			<onclick>ActivateWindow(systeminfo)</onclick>
		</item>
		<item>
			<label>$LOCALIZE[31257]:</label>
			<label2>$INFO[System.Memory(used.percent)]</label2>
			<thumb>special://skin/extras/defaulticonswide/memory.png</thumb>
			<property name="poster">special://skin/extras/defaulticonswide/memory.png</property>
			<property name="episodethumb">special://skin/extras/defaulticonswide/memory2.png</property>
			<property name="special">systeminfo</property>
			<property name="fanart">special://skin/extras/backgrounds/memory.jpg</property>
			<property name="plot">[CR]$LOCALIZE[22012]: $INFO[System.Memory(total)] • $LOCALIZE[158]: $INFO[System.Memory(free)]</property>
			<onclick>ActivateWindow(systeminfo)</onclick>
		</item>
		<item>
			<label>$LOCALIZE[1006]:</label>
			<label2>$INFO[Network.IPAddress]</label2>
			<thumb>special://skin/extras/defaulticonswide/network.png</thumb>
			<property name="poster">special://skin/extras/defaulticonswide/network.png</property>
			<property name="episodethumb">special://skin/extras/defaulticonswide/network2.png</property>
			<property name="special">systeminfo</property>
			<property name="fanart">special://skin/extras/backgrounds/networking.jpg</property>
			<property name="plot">$INFO[Network.LinkState][CR]$LOCALIZE[443]: $INFO[System.InternetState]</property>
			<onclick>ActivateWindow(systeminfo)</onclick>
		</item>
		<item>
			<label>$LOCALIZE[131]:</label>
			<label2>$INFO[System.ScreenWidth]x$INFO[System.ScreenHeight]</label2>
			<thumb>special://skin/extras/defaulticonswide/display.png</thumb>
			<property name="poster">special://skin/extras/defaulticonswide/display.png</property>
			<property name="episodethumb">special://skin/extras/defaulticonswide/display2.png</property>
			<property name="special">systeminfo</property>
			<property name="fanart">special://skin/extras/backgrounds/display.jpg</property>
			<property name="plot">[CR]$INFO[System.ScreenResolution]</property>
			<onclick>ActivateWindow(systeminfo)</onclick>
		</item>
	</include>
		
	<include name="WeatherWidget">
		
		<!--weather widgets -->
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day0.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day0.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day0.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day0.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day0.FanartCode)].png</thumb>
			<property name="poster">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day0.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
			</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day1.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day1.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day1.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day1.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day1.FanartCode)].png</thumb>
			<property name="poster">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day1.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day2.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day2.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day2.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day2.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day2.FanartCode)].png</thumb>
			<property name="poster">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day2.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day3.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day3.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day3.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day3.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day3.FanartCode)].png</thumb>
			<property name="poster">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day3.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day4.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day4.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day4.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day4.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day4.FanartCode)].png</thumb>
			<property name="poster">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day4.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day5.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day5.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day5.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day5.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day5.FanartCode)].png</thumb>
			<property name="poster">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day5.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
			<visible>!IsEmpty(Window(Weather).Property(Day5.Title))</visible>
			<visible>!Skin.String(widgetstyle, poster)</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Weather).Property(Day6.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Weather).Property(Day6.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day6.LowTemp)] $INFO[System.TemperatureUnits]</label2>
			<property name="fanart">$VAR[WeatherFanArtPath]$INFO[Window(Weather).Property(Day6.fanartCode)]/weather.jpg</property>
			<thumb>special://skin/extras/weathericons/$INFO[skin.string(WeatherIconPack)]/$INFO[Window(Weather).Property(Day6.FanartCode)].png</thumb>
			<property name="poster">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
			<property name="plot">$INFO[Window(Weather).Property(Day6.Outlook)]</property>
			<onclick>ActivateWindow(weather)</onclick>
			<visible>!IsEmpty(Window(Weather).Property(Day6.Title))</visible>
			<visible>!Skin.String(widgetstyle, poster)</visible>
		</item>
		
	</include>
	
	<include name="RCBWidget">
		<!--rom collection browser -->
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.1.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.1.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.1.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.1.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.1.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.1.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.1.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.1.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.2.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.2.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.2.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.2.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.2.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.2.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.2.LaunchCommand)]</onclick>
			<visible>!IsEmpty(indow(Weather).Property(MostPlayedROM.2.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.3.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.3.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.3.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.3.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.3.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.3.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.3.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.3.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.4.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.4.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.4.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.4.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.4.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.4.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.4.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.4.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.5.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.5.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.5.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.5.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.5.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.5.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.5.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.5.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.6.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.6.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.6.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.6.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.6.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.6.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.6.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.6.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.7.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.7.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.7.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.7.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.7.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.7.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.7.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.7.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.8.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.8.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.8.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.8.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.8.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.8.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.8.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.8.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.9.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.9.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.9.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.9.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.9.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.9.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.9.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.9.Title))</visible>
		</item>
		<item>
			<label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.10.Title)][/UPPERCASE]</label>
			<label2>$INFO[Window(Home).Property(MostPlayedROM.10.Console)]</label2>
			<property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.10.Fanart)]</property>
			<thumb>$INFO[Window(Home).Property(MostPlayedROM.10.Thumb)]</thumb>
			<property name="poster">$INFO[Window(Home).Property(MostPlayedROM.10.Thumb)]</property>
			<property name="plot">$INFO[Window(Home).Property(MostPlayedROM.10.Plot)]</property>
			<onclick>$INFO[Window(Home).Property(MostPlayedROM.10.LaunchCommand)]</onclick>
			<visible>!IsEmpty(Window(Weather).Property(MostPlayedROM.10.Title))</visible>
		</item>

	</include>

	<variable name="HomeMenuWidgetLabel">
		<value condition="StringCompare(Container(300).ListItem.Property(widget), youtube) | StringCompare(Container(300).ListItem.Property(widget), music)">$INFO[ListItem.label][CR]$INFO[ListItem.label2]</value>
		<value condition="StringCompare(ListItem.Property(special), systeminfo)">[B]$INFO[ListItem.label][/B] $INFO[ListItem.label2]</value>
		<value condition="container.content(tvshows)">$INFO[ListItem.label]</value>
		<value condition="container.content(seasons)">$INFO[ListItem.TvShowTitle][CR]$INFO[ListItem.label]</value>
		<value condition="!IsEmpty(ListItem.Episode) + IntegerGreaterThan(ListItem.Episode,9) + IntegerGreaterThan(ListItem.Season,9)">$INFO[ListItem.TvShowTitle][CR][UPPERCASE]S$INFO[ListItem.Season]E$INFO[ListItem.Episode][/UPPERCASE]</value>
        <value condition="!IsEmpty(ListItem.Episode) + IntegerGreaterThan(ListItem.Episode,9)">$INFO[ListItem.TvShowTitle][CR][UPPERCASE]S0$INFO[ListItem.Season]E$INFO[ListItem.Episode][/UPPERCASE]</value>
        <value condition="!IsEmpty(ListItem.Episode) + IntegerGreaterThan(ListItem.Season,9)">$INFO[ListItem.TvShowTitle][CR][UPPERCASE]S$INFO[ListItem.Season]E0$INFO[ListItem.Episode][/UPPERCASE]</value>
        <value condition="!IsEmpty(ListItem.Episode)">$INFO[ListItem.TvShowTitle][CR][UPPERCASE]S0$INFO[ListItem.Season]E0$INFO[ListItem.Episode][/UPPERCASE]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget), smart-pvr) + StringCompare(ListItem.Property(type),livechannel)">$INFO[ListItem.Property(title)][CR]$INFO[ListItem.label]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget), smart-pvr) + StringCompare(ListItem.Property(type),recorded)">$INFO[ListItem.label]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget), weather)">$INFO[ListItem.label][CR]$INFO[ListItem.label2]</value>
		<value condition="IsEmpty(ListItem.Property(DefaultID))">$INFO[ListItem.label][CR]$INFO[ListItem.label2]</value>
		<value>$INFO[ListItem.label]</value>
    </variable>
	
	<variable name="HomeMenuWidgetInfoLabel">
		<value condition="StringCompare(Container(300).ListItem.Property(widget), youtube)">[B]$INFO[Container(510).ListItem.label][CR]$INFO[Container(510).ListItem.label2][/B]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget), smart-pvr) + StringCompare(Container(510).ListItem.Property(type),livechannel)">[B]$INFO[Container(510).ListItem.Property(title)][/B]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget), smart-pvr) + StringCompare(Container(510).ListItem.Property(type),recorded)">[B]$INFO[Container(510).ListItem.label][/B]</value>
		<value condition="StringCompare(Container(510).ListItem.Property(special), systeminfo)">[B]$INFO[Container(510).ListItem.label][/B] $INFO[Container(510).ListItem.label2]</value>
		
		<value condition="!IsEmpty(Container(510).ListItem.Season) + !IsEmpty(Container(510).ListItem.Episode)">[B][UPPERCASE]S$INFO[Container(510).ListItem.Season]E$INFO[Container(510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(510).ListItem.Title][/B]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Title)">[B]$INFO[Container(510).ListItem.Title][/B]</value>
		<value>[B]$INFO[Container(510).ListItem.Label][/B]</value>
    </variable>
	
	<variable name="HomeMenuWidgetInfoLabel2">
		<value condition="!IsEmpty(Container(510).ListItem.Tagline)">$INFO[Container(510).ListItem.Tagline]</value>
		<value condition="!IsEmpty(Container(510).ListItem.TvShowTitle)">$INFO[Container(510).ListItem.TvShowTitle]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Artist)">$INFO[Container(510).ListItem.Artist]</value>
    </variable>
	
	<variable name="HomeMenuWidgetInfoclearlogo">
		<value condition="!IsEmpty(Container(510).ListItem.Art(tvshow.clearlogo))">$INFO[Container(510).ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Art(clearlogo))">$INFO[Container(510).ListItem.Art(clearlogo)]</value>
    </variable>
	
	<variable name="SpotLightWidgetInfoclearlogo">
		<value condition="!IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
    </variable>
	
	<variable name="HomeMenuWidgetInfoPlot">
	
		<value condition="!IsEmpty(Container(510).ListItem.Property(ShortPlot))">$INFO[Container(510).ListItem.Property(ShortPlot)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Plot)">$INFO[Container(510).ListItem.Plot]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget), weather)">$INFO[Container(510).ListItem.Property(Plot)][CR]$INFO[Container(510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Property(Plot))">$INFO[Container(510).ListItem.Property(Plot)]</value>
    </variable>
	
	<variable name="HomeMenuWidgetInfoPlotAlt">
		<value condition="!IsEmpty(Container(510).ListItem.Property(StartTime))">[COLOR=$INFO[Skin.String(ViewDetailsFocusColor)]]$INFO[Container(510).ListItem.Property(StartTime),, • ]$INFO[Container(510).ListItem.Property(EndTime),, • ]$INFO[Container(510).ListItem.Property(ChannelName)][/COLOR][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Premiered)">[COLOR=$INFO[Skin.String(ViewDetailsFocusColor)]]$INFO[Container(510).ListItem.Premiered,, • ]$INFO[Container(510).ListItem.Duration,,min. • ]$INFO[Container(510).ListItem.Genre][/COLOR][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Year)">[COLOR=$INFO[Skin.String(ViewDetailsFocusColor)]]$INFO[Container(510).ListItem.Year,, • ]$INFO[Container(510).ListItem.Duration,,min. • ]$INFO[Container(510).ListItem.Genre][/COLOR][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
		<value>$VAR[HomeMenuWidgetInfoPlot]</value>
    </variable>
	
	<variable name="HomeMenuWidgetInfoPoster">
		<value condition="!IsEmpty(Container(510).ListItem.Art(tvshow.poster))">$INFO[Container(510).ListItem.Art(tvshow.poster)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Property(medium_poster))">$INFO[Container(510).ListItem.Property(medium_poster)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Art(poster))">$INFO[Container(510).ListItem.Art(poster)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Property(poster))">$INFO[Container(510).ListItem.Property(poster)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Property(tvshow.poster))">$INFO[Container(510).ListItem.Property(tvshow.poster)]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Icon)">$INFO[Container(510).ListItem.Icon]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Property(FanArt))">$INFO[Container(510).ListItem.Property(FanArt)]</value>
		<value>ListItem.Thumb</value>
    </variable>
	

	<include name="widget_layout_vertical_poster">
        <bottom>90</bottom>
        <right>40</right>
		<width>1320</width>
		<height>760</height>
		<orientation>vertical</orientation>
        <onleft>300</onleft>
        <ondown>511</ondown>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,4)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,3)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,2)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,1)">Conditional</animation>
		<animation effect="slide" start="0" end="0,350" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,5) | StringCompare(Container(510).NumItems,5)">Conditional</animation>
		<animation effect="slide" end="0,-30" time="0" condition="StringCompare(Container(300).ListItem.Property(widgetTarget),music)">Conditional</animation>
        <include>widget_layout</include>
	</include>
	
	<include name="widget_layout_vertical_landscape">
		<bottom>110</bottom>
        <right>40</right>
		<width>1110</width>
		<height>630</height>
		<orientation>vertical</orientation>
        <onleft>300</onleft>
        <ondown>511</ondown>
		<animation effect="slide" start="0" end="368" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,2)">Conditional</animation>
		<animation effect="slide" start="0" end="368" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,1)">Conditional</animation>
		<animation effect="slide" start="0" end="0,210" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,3)">Conditional</animation>
		<animation effect="slide" start="0" end="0,210" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,6)">Conditional</animation>
		<animation effect="slide" end="60" time="0" condition="StringCompare(Container(300).ListItem.Property(widgetTarget),music)">Conditional</animation>
        <include>widget_layout</include>
	</include>
	
	<include name="widget_layout_horizontal_poster">
        <posy>55</posy>
        <posx>20</posx>
		<width>1830</width>
		<height>380</height>
		<itemgap>5</itemgap>
		<orientation>horizontal</orientation>
        <ondown>300</ondown>
        <onup>511</onup>
		<animation type="Conditional" condition="Skin.String(GadgetRows, simplehor) + ![ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show)]">
			<effect type="slide" start="0,0" end="0,-160" time="300" tween="cubic" easing="inout" delay="0"/>
		</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,6)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,5)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,4)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,3)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,2)">Conditional</animation>
		<animation effect="slide" start="0" end="259" time="0" condition="!IntegerGreaterThan(Container(510).NumItems,1)">Conditional</animation>
		<animation effect="slide" end="0,30" time="0" condition="StringCompare(Container(300).ListItem.Property(widgetTarget),music) + !Skin.String(GadgetRows, simplehor)">Conditional</animation>
		<animation effect="slide" end="0,110" time="0" condition="StringCompare(Container(300).ListItem.Property(widgetTarget),music) + Skin.String(GadgetRows, simplehor)">Conditional</animation>
        <include>widget_layout</include>
	</include>
    
    <include name="widget_layout_horizontal_landscape">
		<posx>30</posx>
		<posy>55</posy>
		<width>1830</width>
		<height>245</height>
        <ondown>300</ondown>
        <onup>511</onup>
        <orientation>horizontal</orientation>
        <include>widget_layout</include>
	</include>
	
	<include name="widget_layout">
		<ondown>ClearProperty(ShowWidget, Home)</ondown>
		<onback>300</onback>
		<onback>ClearProperty(ShowWidget, Home)</onback>
		<orientation>horizontal</orientation>
		<animation effect="slide" end="0,10" time="0" condition="skin.hastheme(classic) + StringCompare(Container(300).ListItem.Property(widgetTarget),music)">Conditional</animation>
		<animation effect="slide" end="0,-30" time="0" condition="Skin.String(GadgetRows, simplehor) + StringCompare(Container(300).ListItem.Property(widgetTarget),music)">Conditional</animation>
		
		<animation type="Conditional" condition="!StringCompare(Container(300).ListItem.Property(widgetTarget),music) + !Skin.String(GadgetRows, simplever)">
			<effect type="slide" start="0,0" end="0,20" time="0" tween="cubic" easing="inout" delay="0"/>
		</animation>
		
		<scrolltime tween="cubic" easing="inout">500</scrolltime>
		<itemlayout width="370" height="210" condition="!StringCompare(Container(300).ListItem.Property(widgetTarget),music) + Skin.String(widgetstyle, landscape)">
			<include>ThumbsViewLayout</include>
		</itemlayout>
		<focusedlayout width="370" height="210" condition="!StringCompare(Container(300).ListItem.Property(widgetTarget),music) + Skin.String(widgetstyle, landscape) + Control.HasFocus(510)">
			<control type="group">
				<include>ThumbsViewLayoutFocus</include>
			</control>
		</focusedlayout>
		<focusedlayout width="370" height="210" condition="!StringCompare(Container(300).ListItem.Property(widgetTarget),music) + Skin.String(widgetstyle, landscape) + !Control.HasFocus(510)">
			<control type="group">
				<include>ThumbsViewLayout</include>
			</control>
		</focusedlayout>
		<itemlayout height="265" width="262" condition="StringCompare(Container(300).ListItem.Property(widgetTarget),music)">
          <control type="group">
		  <animation effect="zoom" end="93" time="0" condition="skin.hastheme(classic)">Conditional</animation>
		  <posx>-8</posx>
			  <control type="image">
				<include>BigPanelSquareDimensions</include>
				<include>SquareThumbBG</include>
			  </control>
			  <control type="image">
				<include>BigPanelSquareDimensions</include>
				<include>SquareThumb</include>
			  </control>
				<control type="label">
					<posx>25</posx>
					<posy>192</posy>
					<width>220</width>
					<height>60</height>
					<font>Reg22</font>
					<align>center</align>
					<info>ListItem.Label</info>
					<textcolor>white</textcolor>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<visible>!StringCompare(ListItem.Label,..)</visible>
				</control>
			</control>
        </itemlayout>
        <focusedlayout height="265" width="262" condition="StringCompare(Container(300).ListItem.Property(widgetTarget),music)">
          <control type="group">
		  <animation effect="zoom" end="93" time="0" condition="skin.hastheme(classic)">Conditional</animation>
		  <posx>-8</posx>
			  <control type="image">
				<include>BigPanelSquareDimensions</include>
				<include>SquareThumbFO</include>
			  </control>
			  <control type="image">
				<include>BigPanelSquareDimensions</include>
				<include>SquareThumb</include>
			  </control>
				<control type="label">
					<posx>25</posx>
					<posy>192</posy>
					<width>220</width>
					<height>60</height>
					<font>Reg22</font>
					<align>center</align>
					<info>ListItem.Label</info>
					<textcolor>$INFO[Skin.String(ViewDetailsFocusColor)]</textcolor>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<visible>!StringCompare(ListItem.Label,..)</visible>
				</control>
			</control>
        </focusedlayout>
		
		<itemlayout height="380" width="261" condition="!StringCompare(Container(300).ListItem.Property(widgetTarget),music) + Skin.String(widgetstyle, poster)">
          <control type="image">
            <include>BigPanelPosterDimensions</include>
            <include>PosterThumbBG</include>
          </control>
          <control type="image">
            <include>BigPanelPosterDimensions</include>
            <texture border="0" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$VAR[PosterThumb]</texture>
			<aspectratio scalediffuse="false" aligny="center" align="center">stretch</aspectratio>
			<visible>![StringCompare(Container(300).ListItem.Property(widget),weather) | StringCompare(Container(300).ListItem.Property(widget),systeminfo) | [IsEmpty(ListItem.Art(poster)) + IsEmpty(ListItem.Art(tvshow.poster)) + ![SubString(ListItem.filenameandpath,plugin://plugin.video.plexbmc,left) + IsEmpty(ListItem.episode)]]]</visible>
          </control>
		  <control type="image">
            <posx>18</posx>
			<posy>7</posy>
			<width>234</width>
			<height>275</height>
            <texture border="0" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$INFO[ListItem.Icon]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="center">scale</aspectratio>
			<visible>[StringCompare(Container(300).ListItem.Property(widget),weather) | StringCompare(Container(300).ListItem.Property(widget),systeminfo) | [IsEmpty(ListItem.Art(poster)) + IsEmpty(ListItem.Art(tvshow.poster)) + ![SubString(ListItem.filenameandpath,plugin://plugin.video.plexbmc,left) + IsEmpty(ListItem.episode)]]]</visible>
          </control>
		  <include>BigPanelLabelOverlay</include>
		  <control type="group">
            <include>BigPanelPosterDimensions</include>
            <include condition="Skin.HasSetting(CaseOverlays)">PosterOverlay</include>
          </control>
          <include>BigPanelWatchedImage</include>
        </itemlayout>
        <focusedlayout height="380" width="261" condition="!StringCompare(Container(300).ListItem.Property(widgetTarget),music) + Skin.String(widgetstyle, poster)">
          <control type="image">
            <include>BigPanelPosterDimensions</include>
            <include>PosterThumbFO</include>
          </control>
         <control type="image">
            <include>BigPanelPosterDimensions</include>
            <texture border="0" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$VAR[PosterThumb]</texture>
			<aspectratio scalediffuse="false" aligny="center" align="center">stretch</aspectratio>
			<visible>![StringCompare(Container(300).ListItem.Property(widget),weather) | StringCompare(Container(300).ListItem.Property(widget),systeminfo) | [IsEmpty(ListItem.Art(poster)) + IsEmpty(ListItem.Art(tvshow.poster)) + ![SubString(ListItem.filenameandpath,plugin://plugin.video.plexbmc,left) + IsEmpty(ListItem.episode)]]]</visible>
          </control>
		  <control type="image">
            <posx>18</posx>
			<posy>7</posy>
			<width>234</width>
			<height>275</height>
            <texture border="0" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$INFO[ListItem.Icon]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="center">scale</aspectratio>
			<visible>[StringCompare(Container(300).ListItem.Property(widget),weather) | StringCompare(Container(300).ListItem.Property(widget),systeminfo) | [IsEmpty(ListItem.Art(poster)) + IsEmpty(ListItem.Art(tvshow.poster)) + ![SubString(ListItem.filenameandpath,plugin://plugin.video.plexbmc,left) + IsEmpty(ListItem.episode)]]]</visible>
          </control>
		  <include>BigPanelLabelOverlayFocus</include>
		  <control type="group">
            <include>BigPanelPosterDimensions</include>
            <include condition="Skin.HasSetting(CaseOverlays)">PosterOverlay</include>
          </control>
          <include>BigPanelWatchedImage</include>	  
        </focusedlayout>
	
	</include>

	
    
	
	</includes>
